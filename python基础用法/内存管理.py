1、引用计数：
	每个对象维护一个ob_ref字段，用来记录该对象当前被引用的次数，
	每当新的引用指向该对象时，它的引用计数ob_ref加1，
	每当该对象的引用失效时计数ob_ref减1，一旦对象的引用计数为0，该对象立即被回收，
	对象占用的内存空间将被释放。它的缺点是需要额外的空间维护引用计数，这个问题是其次的，
	不过最主要的问题是它不能解决对象的“循环引用”，
	因此，也有很多语言比如Java并没有采用该算法做来垃圾的收集机制。

	什么是循环引用？A和B相互引用而再没有外部引用A与B中的任何一个，
	它们的引用计数虽然都为1，但显然应该被回收

2、标记清除
	『标记清除（Mark—Sweep）』算法是一种基于追踪回收（tracing GC）技术实现的垃圾回收算法。
	对象之间通过引用（指针）连在一起，构成一个有向图，对象构成这个有向图的节点，而引用关系构成这个有向图的边。

3.分代回收
	分代回收是一种以空间换时间的操作方式，Python将内存根据对象的存活时间划分为不同的集合，每个集合称为一个代，
	Python将内存分为了3“代”，分别为年轻代（第0代）、中年代（第1代）、老年代（第2代）